// [Describe what's going on here]
// Sample VCF files written from SLiM can be combined with the ancestral FASTA file
// using bcftools consensus to obtain sample FASTA files for read simulation.
// consensus will need to be run twice with different --haplotype settings to get
// diploid information.

initialize() {
	defineConstant("L", CHR_LENGTH);
	initializeSLiMOptions(nucleotideBased=T);
//	setSeed(REP_ID);
	initializeAncestralNucleotides(randomNucleotides(L));
	initializeMutationTypeNuc("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0, mmJukesCantor(MUTATION_RATE/3));
	initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(REC_RATE);
}
1 {	
	// Output ancestral sequence in fasta format
	header = ">1";
	sequence = sim.chromosome.ancestralNucleotides();
	writeFile(OUT_PATH + "ancestral.fasta", header, append=F);
	writeFile(OUT_PATH + "ancestral.fasta", sequence, append=T);
	sim.addSubpop("p1", POP_SIZE);
}
100000 late() {

	// This line works by itself to output all individuals in the population
	p1.genomes.outputVCF(OUT_PATH + "final_pop.vcf");
	
	// Output population-level allele frequencies
	sim.outputMutations(sim.mutationsOfType(m1), OUT_PATH + "mutations.txt");
	sim.outputFixedMutations(OUT_PATH + "substitutions.txt");
}
